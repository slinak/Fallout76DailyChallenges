// <auto-generated />
using FODailyChallenges.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FODailyChallenges.Migrations
{
    [DbContext(typeof(ChallengesDBContext))]
    partial class ChallengesDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FODailyChallenges.Models.ChallengeResolution", b =>
                {
                    b.Property<int>("ResolutionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResolutionID"));

                    b.Property<int?>("ChallengeID")
                        .HasColumnType("int");

                    b.Property<int?>("DailyChallengeChallengeID")
                        .HasColumnType("int");

                    b.Property<string>("ResolutionLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResolutionQuantity")
                        .HasColumnType("int");

                    b.HasKey("ResolutionID");

                    b.HasIndex("DailyChallengeChallengeID");

                    b.ToTable("Resolutions");
                });

            modelBuilder.Entity("FODailyChallenges.Models.DailyChallenge", b =>
                {
                    b.Property<int>("ChallengeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChallengeID"));

                    b.Property<string>("ChallengeText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChallengeType")
                        .HasColumnType("int");

                    b.HasKey("ChallengeID");

                    b.ToTable("Challenges");
                });

            modelBuilder.Entity("FODailyChallenges.Models.ChallengeResolution", b =>
                {
                    b.HasOne("FODailyChallenges.Models.DailyChallenge", null)
                        .WithMany("Resolutions")
                        .HasForeignKey("DailyChallengeChallengeID");
                });

            modelBuilder.Entity("FODailyChallenges.Models.DailyChallenge", b =>
                {
                    b.Navigation("Resolutions");
                });
#pragma warning restore 612, 618
        }
    }
}
